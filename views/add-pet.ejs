<%- include('partials/header', { title: 'Add New Pet' }) %>

<div class="row justify-content-center">
  <div class="col-md-8 col-lg-6">
    <div class="card shadow-sm border-0 rounded-4">
      <div class="card-body p-4">
        <h1 class="h3 mb-4 text-center text-primary fw-bold">Add a Pet</h1>

        <% if (typeof message !== 'undefined' && message) { %>
          <div class="alert alert-info text-center"><%= message %></div>
        <% } %>

        <% if (typeof error !== 'undefined' && error) { %>
          <div class="alert alert-danger text-center"><%= error %></div>
        <% } %>

        <form id="petForm" action="/pets" method="POST" novalidate>
          <!-- CSRF Protection -->
          <% if (typeof csrfToken !== 'undefined') { %>
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">
          <% } %>

          <!-- Pet Name -->
          <div class="mb-3">
            <label for="name" class="form-label fw-semibold">
              Pet Name *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="2–50 letters, spaces, apostrophes, or hyphens. Example: Buddy, O'Malley, Rex Jr"></i>
            </label>
            <input type="text" class="form-control" id="name" name="name"
                   required minlength="2" maxlength="50"
                   pattern="^[A-Za-z\s'-]+$" autocomplete="off">
            <div class="invalid-feedback">Enter a valid pet name (letters only).</div>
          </div>

          <!-- Species Dropdown -->
          <div class="mb-3">
            <label for="species" class="form-label fw-semibold">
              Species *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="Select the species of your pet"></i>
            </label>
            <select class="form-select" id="species" name="species" required>
              <option value="">-- Select Species --</option>
              <option value="dog">Dog</option>
              <option value="cat">Cat</option>
              <option value="bird">Bird</option>
              <option value="other">Other</option>
            </select>
            <div class="invalid-feedback">Please select a species.</div>
          </div>

          <!-- Other Species Input (Hidden by default) -->
          <div class="mb-3" id="otherSpeciesContainer" style="display: none;">
            <label for="otherSpecies" class="form-label fw-semibold">
              Specify Species *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="Please specify the species of your pet"></i>
            </label>
            <input type="text" class="form-control" id="otherSpecies" name="otherSpecies"
                   pattern="^[A-Za-z\s]+$" autocomplete="off">
            <div class="invalid-feedback">Please enter a valid species name.</div>
          </div>

          <!-- Breed -->
          <div class="mb-3 position-relative">
            <label for="breed" class="form-label fw-semibold">
              Breed *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="Example: Golden Retriever, Siamese, Persian."></i>
            </label>
            <input type="text" class="form-control" id="breed" name="breed" required autocomplete="off">
            <div id="breedSuggestions" class="list-group position-absolute w-100 mt-1" style="z-index: 1000; display: none;"></div>
            <div class="invalid-feedback">Please enter a valid breed.</div>
          </div>

          <!-- Age -->
          <div class="mb-3">
            <label for="age" class="form-label fw-semibold">
              Age (years) *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="Enter in years. Example: 0.5 = 6 months, 2.0 = 2 years."></i>
            </label>
            <input type="number" class="form-control" id="age" name="age"
                   min="0.1" step="0.1" required>
            <div class="invalid-feedback">Please enter a valid age greater than 0.</div>
          </div>

          <!-- Gender -->
          <div class="mb-3">
            <label for="gender" class="form-label fw-semibold">
              Gender *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="Choose one: Male, Female, Other."></i>
            </label>
            <select class="form-select" id="gender" name="gender" required>
              <option value="">-- Select Gender --</option>
              <option value="male">Male</option>
              <option value="female">Female</option>
              <option value="other">Other</option>
            </select>
            <div class="invalid-feedback">Please select a gender.</div>
          </div>

          <!-- Weight -->
          <div class="mb-4">
            <label for="weight" class="form-label fw-semibold">
              Weight (kg) *
              <i class="bi bi-info-circle text-muted ms-1" tabindex="0" data-bs-toggle="tooltip"
                 data-bs-trigger="click"
                 title="Example: 4.5, 10.0, 30.2."></i>
            </label>
            <input type="number" class="form-control" id="weight" name="weight"
                   min="0.1" step="0.1" required>
            <div class="invalid-feedback">Weight must be a positive number.</div>
          </div>

          <button type="submit" class="btn btn-primary w-100 py-2 rounded-pill fw-semibold">
            <i class="bi bi-plus-circle me-2"></i> Save Pet
          </button>
        </form>

        <div class="mt-4 text-center">
          <a href="/dashboard" class="text-decoration-none">← Back to Dashboard</a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', async () => {
  // Enable tooltips
  [...document.querySelectorAll('[data-bs-toggle="tooltip"]')].forEach(el =>
    new bootstrap.Tooltip(el)
  );

  const form = document.getElementById('petForm');
  const ageInput = document.getElementById('age');
  const weightInput = document.getElementById('weight');
  const genderSelect = document.getElementById('gender');
  const breedInput = document.getElementById('breed');
  const speciesSelect = document.getElementById('species');
  const otherSpeciesContainer = document.getElementById('otherSpeciesContainer');
  const otherSpeciesInput = document.getElementById('otherSpecies');
  const suggestions = document.getElementById('breedSuggestions');

  let allBreeds = [];

  // Species change handler
  speciesSelect.addEventListener('change', function() {
    if (this.value === 'other') {
      otherSpeciesContainer.style.display = 'block';
      otherSpeciesInput.setAttribute('required', 'required');
    } else {
      otherSpeciesContainer.style.display = 'none';
      otherSpeciesInput.removeAttribute('required');
      otherSpeciesInput.value = '';
    }
  });

  // Fetch dog breeds from server (cached)
  try {
    const res = await fetch('/api/dog-breeds');
    if (res.ok) {
      const data = await res.json();
      allBreeds = data.map(b => b.name);
    } else {
      console.warn('Dog API returned an error.');
    }
  } catch (err) {
    console.warn('Dog API not available:', err);
  }

  // Breed autocomplete
  breedInput.addEventListener('input', () => {
    const query = breedInput.value.trim().toLowerCase();
    
    if (!query) {
      suggestions.style.display = 'none';
      return;
    }

    const matches = allBreeds.filter(b => 
      b.toLowerCase().includes(query)
    ).slice(0, 5);

    suggestions.innerHTML = '';
    
    if (matches.length > 0) {
      matches.forEach(match => {
        const item = document.createElement('button');
        item.type = 'button';
        item.className = 'list-group-item list-group-item-action small';
        item.textContent = match;
        item.onclick = () => {
          breedInput.value = match;
          suggestions.style.display = 'none';
          breedInput.classList.remove('is-invalid');
        };
        suggestions.appendChild(item);
      });
      suggestions.style.display = 'block';
    } else {
      suggestions.style.display = 'none';
    }
  });

  // Hide suggestions when clicking outside
  document.addEventListener('click', (e) => {
    if (!breedInput.contains(e.target) && !suggestions.contains(e.target)) {
      suggestions.style.display = 'none';
    }
  });

  // Remove invalid class in real time when corrected
  [ageInput, weightInput, genderSelect, breedInput, speciesSelect, otherSpeciesInput].forEach(input => {
    input.addEventListener('input', () => {
      if (input.checkValidity()) {
        input.classList.remove('is-invalid');
      }
    });
  });

  // Form validation
  form.addEventListener('submit', e => {
    let isValid = form.checkValidity();

    // Age validation
    if (ageInput.value <= 0 || isNaN(ageInput.value)) {
      ageInput.classList.add('is-invalid');
      isValid = false;
    }

    // Weight validation
    if (weightInput.value <= 0 || isNaN(weightInput.value)) {
      weightInput.classList.add('is-invalid');
      isValid = false;
    }

    // Gender validation
    if (!genderSelect.value) {
      genderSelect.classList.add('is-invalid');
      isValid = false;
    }

    // Species validation
    if (!speciesSelect.value) {
      speciesSelect.classList.add('is-invalid');
      isValid = false;
    }

    // Other species validation
    if (speciesSelect.value === 'other' && !otherSpeciesInput.value.trim()) {
      otherSpeciesInput.classList.add('is-invalid');
      isValid = false;
    }

    // Breed validation
    if (!breedInput.value.trim()) {
      breedInput.classList.add('is-invalid');
      isValid = false;
    }

    if (!isValid) {
      e.preventDefault();
      e.stopPropagation();
    }

    form.classList.add('was-validated');
  });

  // Handle form data before submission
  form.addEventListener('formdata', (e) => {
    const formData = e.formData;
    
    // If "Other" species is selected, use the custom input value
    if (speciesSelect.value === 'other' && otherSpeciesInput.value.trim()) {
      formData.set('species', otherSpeciesInput.value.trim());
    }
  });
});
</script>

<style>
.list-group-item {
  border: 1px solid #dee2e6;
  border-top: none;
  cursor: pointer;
  transition: background-color 0.15s ease-in-out;
}

.list-group-item:first-child {
  border-top: 1px solid #dee2e6;
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
}

.list-group-item:last-child {
  border-bottom-left-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
}

.list-group-item:hover {
  background-color: #f8f9fa;
}

#breedSuggestions {
  max-height: 200px;
  overflow-y: auto;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  border-radius: 0.375rem;
}
</style>

<%- include('partials/footer') %>